// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.0
//   protoc               v4.25.3
// source: rate/rate.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Empty } from "../google/protobuf/empty.type";

export const protobufPackage = "rate";

export interface Rate {
  rate: number;
  exchangeDate: string;
}

export const RATE_PACKAGE_NAME = "rate";

export interface RateServiceClient {
  getCurrentRate(request: Empty): Observable<Rate>;
}

export interface RateServiceController {
  getCurrentRate(request: Empty): Promise<Rate> | Observable<Rate> | Rate;
}

export function RateServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getCurrentRate"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("RateService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("RateService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const RATE_SERVICE_NAME = "RateService";
